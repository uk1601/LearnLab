version: '3.8'

services:
  backend:
    image: udaykirandasari/learnlab-backend:latest
    ports:
      - "8000:8000"
    env_file:
      - ./.env
    environment:
      - ENVIRONMENT=production
      - DEBUG=False
    depends_on:
      db:
        condition: service_healthy
    networks:
      - learnlab-network
    
  frontend:
    image: udaykirandasari/learnlab-frontend:latest
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
    env_file:
      - ./.env
    depends_on:
      - backend
    networks:
      - learnlab-network
  
  db:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    volumes:
      - type: tmpfs
        target: /var/lib/postgresql/data
      - ./docker/postgres/create-multiple-databases.sh:/docker-entrypoint-initdb.d/00-create-multiple-databases.sh
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/01-init.sql
      - ./docker/postgres/sample_data.sql:/docker-entrypoint-initdb.d/02-sample_data.sql
      - ./docker/postgres/quiz:/docker-entrypoint-initdb.d/03-quiz/run_all.sh
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_MULTIPLE_DATABASES=airflow,learnlab
    networks:
      - learnlab-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
    name: learnlab_postgres_data_prod

networks:
  learnlab-network:
    name: learnlab_network_production
    driver: bridge