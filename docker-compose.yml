
services:
  backend:
    build:
      context: ./backend
      # target: development
      target: production
    ports:
      - "8000:8000"
      - "5678:5678"
    # volumes:
    #   - ./backend:/app
    env_file:
      - ./.env
    environment:
      - ENVIRONMENT=production
      - DEBUG=False
    # depends_on:
    #   db:
    #     condition: service_healthy
    networks:
      - learnlab-network
  frontend:
    build:
      context: ./frontend
      target: production
    ports:
      - "3000:3000"
    # volumes:
    #   - ./frontend:/app
    #   - /app/node_modules
    # environment:
      # - NODE_ENV=development
      # - NODE_ENV=production
    env_file:
      - ./.env
    depends_on:
      - backend
    networks:
      - learnlab-network


  # db:
  #   image: postgres:15-alpine
  #   ports:
  #     - "5432:5432"
  #   volumes:
  #     - type: tmpfs
  #       target: /var/lib/postgresql/data
  #     - ./docker/postgres/create-multiple-databases.sh:/docker-entrypoint-initdb.d/00-create-multiple-databases.sh
  #     - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/01-init.sql
  #     - ./docker/postgres/sample_data.sql:/docker-entrypoint-initdb.d/02-sample_data.sql
  #     - ./docker/postgres/quiz:/docker-entrypoint-initdb.d/03-quiz
  #   environment:
  #     - POSTGRES_USER=postgres
  #     - POSTGRES_PASSWORD=postgres
  #     - POSTGRES_MULTIPLE_DATABASES=airflow,learnlab
  #   networks:
  #     - learnlab-network
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready -U postgres"]
  #     interval: 5s
  #     timeout: 5s
  #     retries: 5

volumes:
  postgres_data:

networks:
  learnlab-network:
    driver: bridge
